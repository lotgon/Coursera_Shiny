shiny::runApp()
shiny::runApp()
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='lotgon',
token='7CF91EB4A8AC9CE2A22C3740B502342D',
secret='9oPBVU2zlMuVSd4tHS6/h1W55kOLGgnCbBgGHrfu')
library(rsconnect)
rsconnect::deployApp('f:\projects\LotgonGithub\Coursera_Shiny\MartinGale\')
rsconnect::deployApp('F:/projects/LotgonGithub/Coursera_Shiny')
shiny::runApp()
shiny::runApp()
library(rFdk)
ttConnect()
ttConf.Symbol()
ttConf.Symbol()$name[1:10]
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
GetBars(symbolName)
GetBars("EURUSD")
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
write.table(symHistory, paste("data", symbolName, sep='//'))
})
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
write.table(symHistory, paste("data", symbolName, sep='//'))
})
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
write.table(symHistory[,.(bidHigh, askLow, askFrom)], paste("data", symbolName, sep='//'))
})
symbolName<-"XAGUSD"
symHistory<-GetBars(symbolName)
fileName<-paste("data", symbolName, sep='//')
write.table(symHistory[,.(bidHigh, askLow, askFrom)], fileName)
zip(fileName)
zip(paste(fileName, "1"), fileName)
d<-read.csv(unzip(file), header=T)
zip(paste(fileName), fileName)
zip(fileName, fileName)
d<-read.csv(unzip(file), header=T)
d<-read.csv(unzip(fileName), header=T)
d<-read.csv(unzip(paste(fileName, "zip",  sep=".")), header=T)
str(d)
d
d<-as.data.table(d)
d
str(d)
str(symHistory)
symHistory$askFromString <- format(symHistory$askFrom, usetz = T)
fileName<-paste("data", symbolName, sep='//')
write.table(symHistory[,.(bidHigh, askLow, askFromString)], fileName)
zip(fileName, fileName)
d<-read.csv(unzip(paste(fileName, "zip",  sep=".")), header=T)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], fileName)
zip(fileName, fileName)
file.remove(fileName)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], fileName)
zip(fileName, fileName)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], fileName)
zip(fileName, fileName)
file.remove(fileName)
d<-read.csv(unzip(paste(fileName, "zip",  sep=".")), header=T)
d
str(d)
zip(fileName, fileName)
fileName<-paste("data", symbolName, sep='\\')
write.table(symHistory[,.(bidHigh, askLow, askFromString)], fileName)
zip(fileName, fileName)
d<-read.csv(unzip(paste(fileName, "zip",  sep=".")), header=T)
d
str(d)
d<-fread(unzip(paste(fileName, "zip",  sep=".")), header=T)
d
str(d)
d<-fread(unzip(paste(fileName, "zip",  sep=".")))
str(d)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
d<-fread(unzip(paste(fileName, "zip",  sep=".")))
d
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
d<-fread(unzip(paste(fileName, "zip",  sep=".")), )
d
as.Date.POSIXct(askFromString)
as.Date.POSIXct(d$askFromString)
strptime(d$askFromString)
library(lubridate)
??"lubridate"
parse_date_time(d$askFromString)
ymd_hms(d$askFromString)
class(ymd_hms(d$askFromString))
ymd_hms("2015-12-31 21:59:00 UTC")
ymd_hms("2015-12-31 21:59:00 ALA")
strptime("2015-12-31 21:59:00 UTC")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S %z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S %z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S%z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S%Z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S %Z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S %z")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S")
strptime("2015-12-31 21:59:00 UTC", "%Y-%m-%d %H:%M:%S", tz="GMT")
d[,askFrom:=strptime(askFromString, "%Y-%m-%d %H:%M:%S", tz="GMT")]
d[,askFrom:=strptime(askFromString, "%Y-%m-%d %H:%M:%S", tz="GMT")]
d$askFrom
d$askFrom <- strptime(d$askFromString, "%Y-%m-%d %H:%M:%S", tz="GMT")
d[,askFrom:=ymd_hms(askFromString, "%Y-%m-%d %H:%M:%S", tz="GMT")]
d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
d
str(d)
d[,askFromString:=NULL]
d
library(rFdk)
ttConnect()
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
symHistory$askFromString <- format(symHistory$askFrom)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
#       d<-fread(unzip(paste(fileName, "zip",  sep=".")))
#        d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
#d[,askFromString:=NULL]
})
library(rFdk)
ttConnect()
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
symHistory$askFromString <- format(symHistory$askFrom)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
#       d<-fread(unzip(paste(fileName, "zip",  sep=".")))
#        d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
#d[,askFromString:=NULL]
})
ttDisconnect()
library(rFdk)
ttConnect()
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
symHistory$askFromString <- format(symHistory$askFrom)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
#       d<-fread(unzip(paste(fileName, "zip",  sep=".")))
#        d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
#d[,askFromString:=NULL]
})
symHistory<-GetBars(symbolName)
ttConf.Symbol()
ttConf.Symbol()[1]
GetBars("EURUSD")
debugSource('F:/projects/LotgonGithub/Coursera_Shiny/MartinGale/prepareData.R', echo=TRUE)
debugSource('F:/projects/LotgonGithub/Coursera_Shiny/MartinGale/prepareData.R', echo=TRUE)
ttConf.Symbol()
ttConf.Symbol()[1]
ttConf.Symbol()$name\
ttConf.Symbol()$name
debugSource('F:/projects/LotgonGithub/Coursera_Shiny/MartinGale/prepareData.R', echo=TRUE)
library(rFdk)
ttConnect()
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
symHistory$askFromString <- format(symHistory$askFrom)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
#       d<-fread(unzip(paste(fileName, "zip",  sep=".")))
#        d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
#d[,askFromString:=NULL]
})
debugSource('F:/projects/LotgonGithub/Coursera_Shiny/MartinGale/prepareData.R', echo=TRUE)
symbolName
sleep(1)
Sys.sleep(1)
library(rFdk)
ttConnect()
Sys.sleep(1)
GetPrecision <-function (symbol)
{
ttConf.Symbol()[name==symbol, precision]
}
GetBars <- function( symbol, periodStr="M1" )
{
bars<-as.data.table(ttFeed.BarHistory(symbol, priceTypeStr = "BidAsk", barPeriodStr = periodStr,
startTime = as.Date('2015-01-01'), endTime = as.Date('2016-01-01')))
bars[,askClose:=askClose * 10^GetPrecision(symbol)]
bars[,bidClose:=bidClose * 10^GetPrecision(symbol)]
if( !complete.cases(bars))
bars<-bars[complete.cases(bars),]
bars
}
sapply( ttConf.Symbol()$name[1:10], function( symbolName)
{
symHistory<-GetBars(symbolName)
symHistory$askFromString <- format(symHistory$askFrom)
write.table(symHistory[,.(bidHigh, askLow, askFromString)], symbolName, row.names = F)
fileName<-paste("data", symbolName, sep='\\')
zip(fileName, symbolName)
file.remove(symbolName)
#       d<-fread(unzip(paste(fileName, "zip",  sep=".")))
#        d[,askFrom:=ymd_hms(askFromString, tz="GMT")]
#d[,askFromString:=NULL]
})
if(!require("data.table"))
install.packages("data.table")
library("data.table")
if(!require("stringi"))
install.packages("stringi")
library("stringi")
installBinaryHttr <- function(fdkRLibPackage){
basicUrl = "https://github.com/SoftFx/FdkRLib/raw/dev/dist/"
fullUrl = paste(basicUrl, fdkRLibPackage, sep = "")
download.file(fullUrl,destfile = fdkRLibPackage, method = "libcurl")
install.packages(fdkRLibPackage, repos = NULL, type = "source", dependencies = TRUE)
file.remove(fdkRLibPackage)
}
if(!require("rClr"))
installBinaryHttr("rClr_0.7-4.zip")
installBinaryHttr("rFdk_1.0.20160315.zip")
if(!require("rClr"))
installBinaryHttr("rClr_0.7-4.zip")
if(!require("data.table"))
install.packages("data.table")
library("data.table")
if(!require("stringi"))
install.packages("stringi")
library("stringi")
installBinaryHttr <- function(fdkRLibPackage){
basicUrl = "https://github.com/SoftFx/FdkRLib/raw/dev/dist/"
fullUrl = paste(basicUrl, fdkRLibPackage, sep = "")
download.file(fullUrl,destfile = fdkRLibPackage, method = "libcurl")
install.packages(fdkRLibPackage, repos = NULL, type = "source", dependencies = TRUE)
file.remove(fdkRLibPackage)
}
if(!require("rClr"))
installBinaryHttr("rClr_0.7-4.zip")
installBinaryHttr("rFdk_1.0.20160315.zip")
installBinaryHttr("rFdk_1.0.20160315.zip")
ttDisconnect()
installBinaryHttr("rFdk_1.0.20160315.zip")
